physical_instruments:
  vacuum_controller:
    class: epcomms.equipment.vacuumcontroller.Terranova962A
    arguments:
      device_location: /dev/ttyUSB0

  multimeter:
    class: epcomms.equipment.multimeter.KeysightEDU34450A
    arguments:
      resource_name: "USB0::10893::36353::CN62350039::0::INSTR"

  lv_psu:
    class: epcomms.equipment.powersupply.KeysightEDU36311A
    arguments:
      resource_name: "USB0::10893::36609::CN63070208::0::INSTR"

  flow_controller: 
    class: epcomms.equipment.flowcontroller.AlicatEIP
    arguments:
      routing_path: "192.168.0.172"

  # test_instrument:
  #   class: epcomms.equipment.test.TestInstrument
  #   arguments: {}

virtual_instruments:
  vacuum_chamber_pressure:
    type: polling
    name: Vacuum Chamber Pressure
    physical_instrument: vacuum_controller
    getter_function: get_pressure_gauge_1
    getter_arguments: {}
    setter_function: None
    setter_arguments: {}
    polling_interval: 1000
    unit: mBar
    name: Vacuum Chamber Pressure

  hv_psu:
    type: manual
    name: High Voltage PSU
    unit: V

  filament_voltage:
    type: polling
    name: Filament Voltage
    physical_instrument: lv_psu
    getter_function: measure_voltage
    getter_arguments:
      channel: 1
    setter_function: set_voltage
    setter_arguments: 
      channel: 1
    polling_interval: 1000
    unit: V

  bias_voltage:
    type: polling
    name: Bias Voltage
    physical_instrument: lv_psu
    getter_function: measure_voltage
    getter_arguments:
      channel: 2
    setter_function: set_voltage
    setter_arguments:
      channel: 2
    polling_interval: 1000
    unit: V

  filament_current:
    type: polling
    name: Filament Current
    physical_instrument: lv_psu
    getter_function: measure_current
    getter_arguments:
      channel: 1
    setter_function: None
    setter_arguments: 
      channel: 1
    polling_interval: 1000
    unit: A

  filament_current_limit: 
    type: command_driven
    name: Filament Current Limit
    physical_instrument: lv_psu
    getter_function: measure_current_limit
    getter_arguments:
      channel: 1
    setter_function: set_current_limit
    setter_arguments:
      channel: 1
    polling_interval: 1000
    unit: A

  bias_current:
    type: polling
    name: Bias Current
    physical_instrument: lv_psu
    getter_function: measure_current
    getter_arguments:
      channel: 2
    setter_function: None
    setter_arguments: 
      channel: 2
    polling_interval: 1000
    unit: A

  bias_current_limit: 
    type: command_driven
    name: Bias Current Limit
    physical_instrument: lv_psu
    getter_function: measure_current_limit
    getter_arguments:
      channel: 2
    setter_function: set_current_limit
    setter_arguments: 
      channel: 2
    polling_interval: 1000
    unit: A

  bias_output:
    type: polling
    name: Bias Output
    physical_instrument: lv_psu
    getter_function: get_output
    getter_arguments:
      channel: 2
    setter_function: set_output
    setter_arguments:
      channel: 2
    polling_interval: 1000
    unit: Boolean

  filament_output:
    type: polling
    name: Filament Output
    physical_instrument: lv_psu
    getter_function: get_output
    getter_arguments:
      channel: 1
    setter_function: set_output
    setter_arguments:
      channel: 1
    polling_interval: 1000
    unit: Boolean
    

  emitted_current:
    type: polling
    name: Emitted Current
    physical_instrument: multimeter
    getter_function: measure_current_dc
    getter_arguments:
      measurement_range: 'AUTO'
      resolution: 'DEF'
      channel: 'PRIMARY'
    setter_function: None
    setter_arguments: {}
    polling_interval: 2000
    unit: A

  argon_pressure:
    type: polling
    name: Argon Pressure
    physical_instrument: flow_controller
    getter_function: get_pressure
    getter_arguments: {}
    setter_function: None
    setter_arguments: {}
    polling_interval: 4000
    unit: psia

  argon_flow_temp:
    type: polling
    name: Argon Flow Temperature
    physical_instrument: flow_controller
    getter_function: get_flow_temp
    getter_arguments: {}
    setter_function: None
    setter_arguments: {}
    polling_interval: 4000
    unit: C

  
  argon_volumetric_flow:
    type: polling
    name: Argon Volumetric Flow
    physical_instrument: flow_controller
    getter_function: get_volumetric_flow
    getter_arguments: {}
    setter_function: None
    setter_arguments: {}
    polling_interval: 4000
    unit: ccm

  argon_mass_flow:
    type: polling
    name: Argon Mass Flow
    physical_instrument: flow_controller
    getter_function: get_mass_flow
    getter_arguments: {}
    setter_function: None
    setter_arguments: {}
    polling_interval: 4000
    unit: sccm

  argon_mass_flow_setpoint:
    type: command_driven
    name: Argon Mass Flow Setpoint
    physical_instrument: flow_controller
    getter_function: get_mass_flow_setpoint
    getter_arguments: {}
    setter_function: None
    setter_arguments: {}
    polling_interval: 4000
    unit: sccm

  argon_setpoint:
    type: command_driven
    name: Argon Setpoint
    physical_instrument: flow_controller
    getter_function: get_setpoint
    getter_arguments: {}
    setter_function: set_setpoint
    setter_arguments: {}
    polling_interval: 4000
    unit: scc

  

  





  
  



