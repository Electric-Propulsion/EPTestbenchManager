physical_instruments:
  vacuum_controller:
    class: epcomms.equipment.vacuumcontroller.Terranova962A
    arguments:
      device_location: /dev/ttyUSB0

  multimeter:
    class: epcomms.equipment.multimeter.KeysightEDU34450A
    arguments:
      resource_name: "USB0::10893::36353::CN62350039::0::INSTR"

  # lv_psu:
  #   class: epcomms.equipment.powersupply.KeysightEDU36311A
  #   arguments:
  #     resource_name: "USB0::10893::36609::CN63070208::0::INSTR"

  high_power_psu:
    class: epcomms.equipment.powersupply.BK1694
    arguments:
      ip: "192.168.0.156"

  # flow_controller: 
  #   class: epcomms.equipment.flowcontroller.AlicatEIP
  #   arguments:
  #     routing_path: "192.168.0.172"

  # test_instrument:
  #   class: epcomms.equipment.test.TestInstrument
  #   arguments: {}

virtual_instruments:
  vacuum_chamber_pressure:
    type: polling
    name: Vacuum Chamber Pressure
    physical_instrument: vacuum_controller
    getter_function: get_pressure_gauge_1
    getter_arguments: {}
    setter_function: None
    setter_arguments: {}
    polling_interval: 1000
    unit: mBar
    name: Vacuum Chamber Pressure

  filament_voltage_setpoint:
    type: command_driven
    name: Filament Voltage Setpoint
    physical_instrument: high_power_psu
    getter_function: measure_voltage_setpoint
    getter_arguments: {}
    setter_function: set_voltage
    setter_arguments: {}
    polling_interval: 1000
    unit: V

  filament_voltage:
    type: "null"
    name: Filament Voltage (NULL)
    units: units

  bias_voltage:
    name: "Bias Voltage (NULL)"
    type: "null"
    unit: units

  bias_current_limit: 
    type: "null"
    name: Bias Current Limit (NULL)
    unit: units

  filament_current_limit:
    type: "null"
    name: Filament Current Limit (NULL)
    unit: units

  bias_output:
    type: "null"
    name: Bias Output (NULL)
    unit: units


  filament_output:
    type: command_driven
    name: Filament Output
    physical_instrument: high_power_psu
    getter_function: get_output
    getter_arguments: {}
    setter_function: set_output
    setter_arguments: {}
    polling_interval: 1000
    unit: Boolean
    
  emitted_current:
    type: polling
    name: Emitted Current
    physical_instrument: multimeter
    getter_function: measure_current_dc
    getter_arguments:
      measurement_range: 'AUTO'
      resolution: 'DEF'
      channel: 'PRIMARY'
    setter_function: None
    setter_arguments: {}
    polling_interval: 2000
    unit: A

  # argon_pressure:
  #   type: polling
  #   name: Argon Pressure
  #   physical_instrument: flow_controller
  #   getter_function: get_pressure
  #   getter_arguments: {}
  #   setter_function: None
  #   setter_arguments: {}
  #   polling_interval: 4000
  #   unit: psia

  # argon_flow_temp:
  #   type: polling
  #   name: Argon Flow Temperature
  #   physical_instrument: flow_controller
  #   getter_function: get_flow_temp
  #   getter_arguments: {}
  #   setter_function: None
  #   setter_arguments: {}
  #   polling_interval: 4000
  #   unit: C

  
  # argon_volumetric_flow:
  #   type: polling
  #   name: Argon Volumetric Flow
  #   physical_instrument: flow_controller
  #   getter_function: get_volumetric_flow
  #   getter_arguments: {}
  #   setter_function: None
  #   setter_arguments: {}
  #   polling_interval: 4000
  #   unit: ccm

  # argon_mass_flow:
  #   type: polling
  #   name: Argon Mass Flow
  #   physical_instrument: flow_controller
  #   getter_function: get_mass_flow
  #   getter_arguments: {}
  #   setter_function: None
  #   setter_arguments: {}
  #   polling_interval: 4000
  #   unit: sccm

  # argon_mass_flow_setpoint:
  #   type: command_driven
  #   name: Argon Mass Flow Setpoint
  #   physical_instrument: flow_controller
  #   getter_function: get_mass_flow_setpoint
  #   getter_arguments: {}
  #   setter_function: None
  #   setter_arguments: {}
  #   polling_interval: 4000
  #   unit: sccm

  # argon_setpoint:
  #   type: command_driven
  #   name: Argon Setpoint
  #   physical_instrument: flow_controller
  #   getter_function: get_setpoint
  #   getter_arguments: {}
  #   setter_function: set_setpoint
  #   setter_arguments: {}
  #   polling_interval: 4000
  #   unit: scc

  

  





  
  



